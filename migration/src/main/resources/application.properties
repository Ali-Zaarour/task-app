spring.application.name=migration

server.port=8081
# Hibernate properties
# The sql dialect make hibernate generate better sql for the chosen database
spring.jpa.database=postgresql
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
# Optional: Show generated SQL statements in the console
spring.jpa.show-sql= true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.format_sql=true

# When Flyway initializes and runs migrations for a database that
# does not have a schema history table, it creates one and marks
# it with a baseline version. This baseline version represents
# the starting point of migrations for the database.
spring.flyway.baseline-on-migrate=true

# Defines the locations where Flyway should
# look for the SQL migration scripts. By default,
# it looks for scripts in classpath:db/migration.
spring.flyway.locations= classpath:db/

# Enabling validation ensures that Flyway checks the applied
# migrations against their checksums stored in the metadata
# table. If a migration's checksum has changed, indicating
# that it has been modified, Flyway will fail the migration
# to prevent accidental changes to already applied migrations.
spring.flyway.validateOnMigrate=true

# Enables the validation of migration script names against
# the standard naming conventions enforced by Flyway.
spring.flyway.validate-migration-naming=true